===========================
How Use 2-matrix_divided.py
===========================

This module defines a matrix division function ``matrix_divided(matrix, div)``.

Usage
=====
 
``matrix_divided(...)``` returns a new matrix with all elements divided.
 
::

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> print(matrix_divided([[2, 4, 6], [8, 10, 12]], 2))
    [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

    NB quotients are rounded to a maximum of two decimal places.

::

    >>> print(matrix_divided([[1, 2, 3], [4, 5, 6]], 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Can handle floating-point numbers.

::

    >>> print(matrix_divided([[1.1, -2.2, 3.3], [4.4, 5.5, -6.6]], 3))
    [[0.37, -0.73, 1.1], [1.47, 1.83, -2.2]]

Integers and floats can be combined.

::

    >>> print(matrix_divided([[1, -2.2, 3, 4.4, 5], [-6.6, 7.00, 8, 9.999, 10]], 3))
    [[0.33, -0.73, 1.0, 1.47, 1.67], [-2.2, 2.33, 2.67, 3.33, 3.33]]


Invalid Matrices
================

The parameter ``matrix`` must be a list of lists consisting of either ints or
floats. If ``matrix`` is not a list, a TypeError is raised.

::

    >>> print(matrix_divided("non list", 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

::

    >>> print(matrix_divided([], 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

But an empty list of lists will succeed.

::

    >>> print(matrix_divided([[]], 3))
    [[]]

An identical TypeError is raised if ``matrix`` is not specifically a list of
lists.

::

    >>> print(matrix_divided([1, 2, 3], 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

The same TypeError is raised yet again if any elements in ``matrix`` are
neither ints nor floats.

::

    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, "not a number", 6]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats


All the rows in ``matrix`` must be the same size. If any rows are
of different sizes, a new TypeError is raised.

::

    >>> print(matrix_divided([[1, 2, 3, 4], [5, 6, 7]], 3))
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

Invalid Divisors
================

The parameter ``div`` must be either an int or float. Otherwise, a TypeError
is raised.

::

    >>> print(matrix_divided([[1, 2, 3], [4, 5, 6]], "non number"))
    Traceback (most recent call last):
    TypeError: div must be a number

::

    >>> print(matrix_divided([[1, 2, 3], [4, 5, 6]], 0))
    Traceback (most recent call last):
    ZeroDivisionError: division by zero
